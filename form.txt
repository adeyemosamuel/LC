<ion-header>

  <ion-navbar color="primary">
    <ion-title text-center style="text-transform:uppercase">Leads Form</ion-title>
    <ion-buttons end>
      <button ion-button icon-only (click)="popover($event)">
          <ion-icon name="md-more"></ion-icon>
        </button>
    </ion-buttons>
  </ion-navbar>

</ion-header>


<ion-content no-padding>
  <form novalidate (ngSubmit)="onSubmit(RegisterForm)" [formGroup]="RegisterForm">
    <ion-list no-lines>
      <ion-item>
        <ion-label style="color:#4fc143" floating>Name</ion-label>
        <ion-input formControlName="name"></ion-input>
      </ion-item>

      <ion-item>
        <ion-label style="color:#4fc143" floating>Occupation</ion-label>
        <ion-input formControlName="occupation"></ion-input>
      </ion-item>

      <ion-item>
        <ion-label style="color:#4fc143">Date of Birth</ion-label>
        <ion-datetime displayFormat="YYYY-MM-DD" pickerFormat="MMM DD YYYY" formControlName="dob"></ion-datetime>
      </ion-item>

      <ion-item>
        <ion-label style="color:#4fc143">Gender</ion-label>
        <ion-select formControlName="gender">
          <ion-option value="f">Female</ion-option>
          <ion-option value="m">Male</ion-option>
        </ion-select>
      </ion-item>

      <ion-item>
        <ion-label style="color:#4fc143">Marital Status</ion-label>
        <ion-select formControlName="marital_status">
          <ion-option value="single">Single</ion-option>
          <ion-option value="married">Married</ion-option>
          <ion-option value="divorced">Divorced</ion-option>
          <ion-option value="widowed">Widowed</ion-option>
        </ion-select>
      </ion-item>
<!-- phonenumber -->
      <ion-item>
        <ion-label style="color:#4fc143" floating>Phone Number</ion-label>
        <ion-input type="tel" formControlName="phonenumber"></ion-input>
      </ion-item>

      <ion-item no-lines *ngIf="( RegisterForm.get('phonenumber').hasError('required') || RegisterForm.get('phonenumber').hasError('minlength') || RegisterForm.get('phonenumber').hasError('maxlength'))&& RegisterForm.get('phonenumber').touched">
          
          <div class="error" *ngIf="RegisterForm.get('phonenumber').hasError('required') && RegisterForm.get('emailaddress').touched">
          Phone number no is required
          </div>
          
          <div class="error" *ngIf="RegisterForm.get('phonenumber').hasError('maxlength') && RegisterForm.get('emailaddress').touched">
          Please enter valid phone number
          </div>
          
          
          </ion-item>
          


<!-- email -->
      <ion-item>
        <ion-label style="color:#4fc143" floating>E-mail Address</ion-label>
        <ion-input formControlName="emailaddress"></ion-input>
     

      </ion-item>

      <ion-item no-lines *ngIf="( RegisterForm.get('emailaddress').hasError('required') || RegisterForm.get('emailaddress').hasError('emailaddress') ) && RegisterForm.get('emailaddress').touched">

        <div class="error" *ngIf="RegisterForm.get('emailaddress').hasError('required') && RegisterForm.get('emailaddress').touched">
          E-mail address is required
        </div>
        <div class="error" *ngIf="RegisterForm.get('emailaddress').hasError('emailaddress') && RegisterForm.get('emailaddress').touched">
            Please enter valid email address
            </div>
            
            </ion-item>

            <!-- email -->

        <ion-item>
          <ion-label style="color:#4fc143" floating>Address</ion-label>
          <ion-input formControlName="address"></ion-input>
        </ion-item>

        <div>
          <ion-grid>

            <ion-row>
              <ion-col col-3>

                <p style="white-space:normal; color:limegreen;">Select Product</p>
              </ion-col>
              <ion-col col-9>
                <ion-item no-lines style="color:limegreen; white-space:normal; font-weight:lighter;" (click)="selectProductModal()">
                  <p style="color:limegreen">{{selectedProduct}}</p>
                  <ion-icon class="icon" item-end name="ios-options"></ion-icon>
                </ion-item>
              </ion-col>

            </ion-row>


          </ion-grid>
        </div>

    </ion-list>
    <!-- <button ion-button  (click)="savedetails(RegisterForm)">SAVE</button> -->
  </form>

  <button ion-button [disabled]="RegisterForm.valid">SAVE</button>

  <style type="text/css">
    .error
    {
    color:red;
    }
    
    </style>

</ion-content>
<!-- <ion-footer>
  <ion-toolbar color="primary">
    <ion-title text-center >SAVE</ion-title>
  </ion-toolbar>
</ion-footer> -->




import { Component } from '@angular/core';
import { IonicPage, ModalController, NavController, NavParams } from 'ionic-angular';
import { ControllerServiceProvider } from '../../providers/controller-service/controller-service';
// import { SQLite, SQLiteObject } from '@ionic-native/sqlite';
import { Storage } from '@ionic/storage';
import { Network } from '@ionic-native/network';
import { Http } from '@angular/http';
import {ServerServiceProvider} from '../../providers/server-service/server-service';
import { FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl, FormControl } from '@angular/forms';
import { OnInit } from '@angular/core';

// declare var navigator: any;
// declare var Connection: any;




@IonicPage()
@Component({
  selector: 'page-register-leads',
  templateUrl: 'register-leads.html',
})
export class RegisterLeadsPage implements OnInit{
  

  Http: any;
  selectedProduct: string = ''
  storage: any;
  leadsArray: any = [];
  occupation: any;
  dob: any;
  gender: any;
  marital_status: any;
  address: any;
  name: string = '';
  
  leadArray: Array<any> = [];
  status: any = 'Pending';
  connection: any;

  phonenumber: number;
  emailaddress: any;
  RegisterForm: FormGroup;

  constructor(public navCtrl: NavController,public formBuilder: FormBuilder, private server:ServerServiceProvider, public http: Http, public navParams: NavParams, private network: Network, public modalCtrl: ModalController, private controller: ControllerServiceProvider, private store: Storage) {

  }
  ngOnInit() {
    
    this.RegisterForm = new FormGroup({
    emailaddress: new FormControl('', [Validators.required,Validators.email]),
    phonenumber: new FormControl('', [Validators.required,Validators.maxLength(11)]),
    
    occupation: new FormControl('',[Validators.required]),
    dob:new FormControl('',[Validators.required]),
    gender: new FormControl('',[Validators.required]),
    marital_status:  new FormControl('',[Validators.required]),
    name:  new FormControl('',[Validators.required]),
    address:  new FormControl('',[Validators.required]),
    selectedProduct: new FormControl('',[Validators.required]),
    
    });
    console.log(this.RegisterForm)
    }

    

  popover(ev) {
    let pop = this.controller.miscPopOver('PopoverPage', ev);
    pop.present({ ev: ev });
    pop.onDidDismiss((data) => {
      if (data)
        this.navCtrl.setRoot(data);
    });
  }

  selectProductModal() {
    let modal = this.modalCtrl.create('ModalPage');
    modal.present();
    modal.onDidDismiss(data => {
      console.log(data);
      this.selectedProduct = data;
    });
  }


  ionViewDidLoad() {
    console.log('ionViewDidLoad RegisterLeadsPage');
  }

  onSubmit(RegisterForm) {
    //API
    this.store.get('networkStatus').then((val) => {
      if (val) {
        let body = {
          name: this.name,
          phonenumber: this.phonenumber,
          selectedProduct: this.selectedProduct,
          occupation: this.occupation,
          dob: this.dob,
          address: this.address,
          marital_status: this.marital_status,
          gender: this.gender,
          emailaddress: this.emailaddress,
          user: 'username'
        };

        //funcName is 'registerLeads'
        this.server.processData(body, 'registerLeads').then((data) => {
          console.log(data);
        }) .catch((err) => {
          console.log(err)
        })

      } else {
        this.store.get('leads').then((val) => {

          if (val) this.leadArray = val;
          this.storedetails();
        });
      }
    });
  }




  storedetails() {
    let body = {
      name: this.name,
      phonenumber: this.phonenumber,
      selectedProduct: this.selectedProduct,
      occupation: this.occupation,
      dob: this.dob,
      address: this.address,
      marital_status: this.marital_status,
      gender: this.gender,
      emailaddress: this.emailaddress,
      status: this.status,
    };
    this.leadArray.push(body);
    this.store.set('leads', this.leadArray, );
  }
}




